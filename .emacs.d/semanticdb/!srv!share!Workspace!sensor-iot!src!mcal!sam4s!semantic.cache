;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("_MCAL_LED_SAM4S_EMBEDDED_2018_" variable (:constant-flag t) nil [307 337])
            ("cstdint" include (:system-flag t) nil [339 357])
            ("mcal" type
               (:members 
                  ( ("led" type
                       (:members 
                          ( ("config_type" type
                               (:typedef ("void")
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [400 425])
                            ("init" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("config_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [440 453]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [430 454])
                            ("led" type
                               (:members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [480 487])
                                    ("port_type" type
                                       (:typedef ("std::uint32_t" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [540 572])
                                    ("bval_type" type
                                       (:typedef ("std::uint32_t" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [579 611])
                                    ("bval" function
                                       (:arguments 
                                          ( ("" variable (:type ("b" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [821 823]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [816 1322])
                                    ("toggle" function
                                       (:methodconst-flag t
                                        :arguments 
                                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1342 1347]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [1330 1597])
                                    ("private" label nil (reparse-symbol classsubparts) [1603 1611])
                                    ("port" variable
                                       (:constant-flag t
                                        :type ("port_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1618 1639])
                                    ("bval" variable
                                       (:constant-flag t
                                        :type ("bval_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1646 1667]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [460 1674])
                            ("led_yellow" variable
                               (:typemodifiers ("extern")
                                :constant-flag t
                                :type ("led" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [1680 1708]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [378 1713]))                  
                :type "namespace")
                nil [359 1716]))          
      :file "mcal_led.h"
      :pointmax 1758
      :fsize 1153
      :lastmodtime '(23478 24324 196937 901000)
      :unmatched-syntax nil
      :lexical-table 
        '(("_MCAL_LED_SAM4S_EMBEDDED_2018_")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("_MCAL_REG_EMBEDDED_H_" variable (:constant-flag t) nil [230 251])
            ("cstdint" include (:system-flag t) nil [253 273])
            ("mcal" type
               (:members 
                  ( ("reg" type
                       (:members 
                          ( ("bval0" variable
                               (:default-value "1U"
                                :type ("std::uint8_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [367 392])
                            ("1U" variable (:type "int") (reparse-symbol namespacesubparts) [437 440])
                            ("2U" variable (:type "int") (reparse-symbol namespacesubparts) [485 488])
                            ("3U" variable (:type "int") (reparse-symbol namespacesubparts) [533 536])
                            ("4U" variable (:type "int") (reparse-symbol namespacesubparts) [581 584])
                            ("5U" variable (:type "int") (reparse-symbol namespacesubparts) [629 632])
                            ("6U" variable (:type "int") (reparse-symbol namespacesubparts) [677 680])
                            ("7U" variable (:type "int") (reparse-symbol namespacesubparts) [725 728])
                            ("periph_base" variable
                               (:default-value "UINT32_C(0x40000000)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [790 843])
                            ("scs_base" variable
                               (:default-value "UINT32_C(0xE000E000)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [890 943])
                            ("apb1periph_base" variable
                               (:default-value "periph_base     + UINT32_C(0x00000000)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [961 1032])
                            ("ahb1periph_base" variable
                               (:default-value "periph_base     + UINT32_C(0x00020000)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [1049 1120])
                            ("scb_base" variable
                               (:default-value "scs_base        + UINT32_C(0x00000D00)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [1221 1292])
                            ("scb_vtor" variable
                               (:default-value "scs_base        + UINT32_C(0x00000D08)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [1309 1380])
                            ("nvic_base" variable
                               (:default-value "scs_base        + UINT32_C(0x00000100)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [1442 1513])
                            ("nvic_iser0" variable
                               (:default-value "scs_base        + UINT32_C(0x00000100)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [1530 1601])
                            ("nvic_iser1" variable
                               (:default-value "scs_base        + UINT32_C(0x00000104)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [1618 1689])
                            ("nvic_icer0" variable
                               (:default-value "scs_base        + UINT32_C(0x00000180)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [1706 1777])
                            ("nvic_icer1" variable
                               (:default-value "scs_base        + UINT32_C(0x00000184)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [1794 1865])
                            ("nvic_ispr0" variable
                               (:default-value "scs_base        + UINT32_C(0x00000200)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [1882 1953])
                            ("nvic_ispr1" variable
                               (:default-value "scs_base        + UINT32_C(0x00000204)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [1970 2041])
                            ("nvic_icpr0" variable
                               (:default-value "scs_base        + UINT32_C(0x00000280)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [2058 2129])
                            ("nvic_icpr1" variable
                               (:default-value "scs_base        + UINT32_C(0x00000284)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [2146 2217])
                            ("nvic_iabr0" variable
                               (:default-value "scs_base        + UINT32_C(0x00000300)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [2234 2305])
                            ("nvic_iabr1" variable
                               (:default-value "scs_base        + UINT32_C(0x00000304)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [2322 2393])
                            ("nvic_ipr0" variable
                               (:default-value "scs_base        + UINT32_C(0x00000400)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [2410 2481])
                            ("nvic_ipr1" variable
                               (:default-value "scs_base        + UINT32_C(0x00000404)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [2498 2569])
                            ("nvic_stir" variable
                               (:default-value "scs_base        + UINT32_C(0x00000F00)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [2587 2658])
                            ("nvic2_base" variable
                               (:default-value "scs_base        + UINT32_C(0x00000F00)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [2677 2748])
                            ("syst_csr" variable
                               (:default-value "scs_base        + UINT32_C(0x00000010)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [2784 2855])
                            ("syst_rvr" variable
                               (:default-value "scs_base        + UINT32_C(0x00000014)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [2872 2943])
                            ("syst_cvr" variable
                               (:default-value "scs_base        + UINT32_C(0x00000018)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [2960 3031])
                            ("syst_calib" variable
                               (:default-value "scs_base        + UINT32_C(0x0000001C)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [3048 3119])
                            ("pmc_base" variable
                               (:default-value "periph_base     + UINT32_C(0x000E0400)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [3174 3245])
                            ("pmc_pcer0" variable
                               (:default-value "periph_base     + UINT32_C(0x000E0410)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [3306 3377])
                            ("rcc_base" variable
                               (:default-value "ahb1periph_base + UINT32_C(0x00003800)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [3395 3466])
                            ("pwr_base" variable
                               (:default-value "apb1periph_base + UINT32_C(0x00007000)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [3483 3554])
                            ("wdt_base" variable
                               (:default-value "periph_base     + UINT32_C(0x000E1450)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [3627 3698])
                            ("wdt_mr" variable
                               (:default-value "periph_base     + UINT32_C(0x000E1454)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [3715 3786])
                            ("pioa_periph_id" variable
                               (:default-value "11"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [3846 3881])
                            ("pioa_base" variable
                               (:default-value "periph_base        + UINT32_C(0xE0E00)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [3898 3969])
                            ("piob_periph_id" variable
                               (:default-value "12"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [3986 4021])
                            ("piob_base" variable
                               (:default-value "periph_base        + UINT32_C(0xE1000)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4038 4109])
                            ("pioc_periph_id" variable
                               (:default-value "13"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4126 4161])
                            ("pioc_base" variable
                               (:default-value "periph_base        + UINT32_C(0xE1200)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4178 4249])
                            ("piob_per" variable
                               (:default-value "piob_base       + UINT32_C(0x00)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4268 4333])
                            ("piob_pdr" variable
                               (:default-value "piob_base       + UINT32_C(0x04)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4350 4415])
                            ("piob_psr" variable
                               (:default-value "piob_base       + UINT32_C(0x08)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4432 4497])
                            ("piob_abcdsr1" variable
                               (:default-value "piob_base       + UINT32_C(0x70)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4514 4579])
                            ("piob_abcdsr2" variable
                               (:default-value "piob_base       + UINT32_C(0x74)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4596 4661])
                            ("pioc_per" variable
                               (:default-value "periph_base     + UINT32_C(0x000E1200)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4679 4750])
                            ("pioc_oer" variable
                               (:default-value "periph_base     + UINT32_C(0x000E1210)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4767 4838])
                            ("pioc_codr" variable
                               (:default-value "periph_base     + UINT32_C(0x000E1234)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4855 4926])
                            ("pioc_sodr" variable
                               (:default-value "periph_base     + UINT32_C(0x000E1230)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [4943 5014])
                            ("pioc_odsr" variable
                               (:default-value "periph_base     + UINT32_C(0x000E1238)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [5031 5102])
                            ("pioc_pdsr" variable
                               (:default-value "periph_base     + UINT32_C(0x000E123C)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [5119 5190])
                            ("uart0_base" variable
                               (:default-value "periph_base     + UINT32_C(0x000E0600)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [5244 5315])
                            ("uart1_base" variable
                               (:default-value "periph_base     + UINT32_C(0x000E0800)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [5332 5403])
                            ("twi0_base" variable
                               (:default-value "periph_base     + UINT32_C(0x00018000)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [5456 5527])
                            ("twi1_base" variable
                               (:default-value "periph_base     + UINT32_C(0x0001C000)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [5544 5615])
                            ("_base" variable
                               (:default-value "periph_base     + UINT32_C(0x000E0A00)"
                                :type "int")
                                (reparse-symbol namespacesubparts) [5688 5740])
                            ("eefc1_base" variable
                               (:default-value "periph_base     + UINT32_C(0x000E0C00)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [5757 5828])
                            ("adc_base" variable
                               (:default-value "periph_base     + UINT32_C(0x00038000)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [5881 5952])
                            ("flash_r_base" variable
                               (:default-value "ahb1periph_base + UINT32_C(0x00003C00)"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [5970 6041])
                            ("gpio_base" variable
                               (:default-value "0x0"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [6125 6155])
                            ("tim4_base" variable
                               (:default-value "0x0"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [6198 6228])
                            ("iwdg_ase" variable
                               (:default-value "0x0"
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [6285 6314]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [300 6321]))                  
                :type "namespace")
                nil [277 6325]))          
      :file "mcal_reg.h"
      :pointmax 6358
      :fsize 6142
      :lastmodtime '(23493 56249 475604 975000)
      :unmatched-syntax nil
      :lexical-table 
        '(("_MCAL_REG_EMBEDDED_H_")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("_MCAL_CPU_SAM4S_EMBEDDED_2018_" variable (:constant-flag t) nil [340 370])
            ("cstdint" include (:system-flag t) nil [372 390])
            ("mcal" type
               (:members 
                  ( ("cpu" type
                       (:members 
                          ( ("config_type" type
                               (:typedef ("void")
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [434 459])
                            ("init" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol namespacesubparts) [465 477])
                            ("post_init" function
                               (:typemodifiers ("inline")
                                :type "void")
                                (reparse-symbol namespacesubparts) [483 509])
                            ("nop" function
                               (:typemodifiers ("inline")
                                :type "void")
                                (reparse-symbol namespacesubparts) [514 556])
                            ("read_program_memory" function
                               (:typemodifiers ("inline")
                                :arguments 
                                  ( ("pointer_to_program_memory" variable
                                       (:pointer 1
                                        :typemodifiers ("volatile")
                                        :type ("std::uint8_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [602 652]))                                  
                                :type ("std::uint8_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [562 705]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [411 710]))                  
                :type "namespace")
                nil [392 712]))          
      :file "mcal_cpu.h"
      :pointmax 755
      :fsize 777
      :lastmodtime '(23478 24324 196937 901000)
      :unmatched-syntax nil
      :lexical-table 
        '(("_MCAL_CPU_SAM4S_EMBEDDED_2018_")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("mcal_led.h" include (:system-flag t) nil [280 301])
            ("mcal_reg_access.h" include (:system-flag t) nil [302 330])
            ("mcal" type
               (:members 
                  ( ("led" type
                       (:members 
                          ( ("led_yellow" function
                               (:prototype-flag t
                                :constant-flag t
                                :arguments 
                                  ( ("" variable (:type ("mcal::reg::pioc_base" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [396 417])
                                    ("" variable (:type ("0x800000U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [418 428]))                                  
                                :type ("led" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [375 429]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [352 434]))                  
                :type "namespace")
                nil [333 436]))          
      :file "mcal_led.cpp"
      :pointmax 437
      :fsize 1605
      :lastmodtime '(23478 24327 693585 625000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("_MCAL_ACCESS_SAM4S_EMBEDDED_2018_" variable (:constant-flag t) nil [345 378])
            ("mcal_reg.h" include (:system-flag t) nil [380 403])
            ("mcal/mcal_reg_access_template.h" include (:system-flag t) nil [404 448])
            ("mcal/mcal_reg_dynamic_access_template.h" include (:system-flag t) nil [449 499]))          
      :file "mcal_reg_access.h"
      :pointmax 545
      :fsize 546
      :lastmodtime '(23478 24324 200271 217000)
      :unmatched-syntax nil
      :lexical-table 
        '(("_MCAL_ACCESS_SAM4S_EMBEDDED_2018_")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("_MCAL_IRQ_SAM4S_EMBEDDED_2018_" variable (:constant-flag t) nil [501 531])
            ("mcal/mcal.h" include (:system-flag t) nil [533 555])
            ("mcal" type
               (:members 
                  ( ("irq" type
                       (:members 
                          ( ("config_type" type
                               (:typedef ("void")
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [599 624])
                            ("IRQn_t" type
                               (:typedef ("std::uint32_t" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [629 658])
                            ("init" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("config_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [698 717]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [688 718])
                            ("enable_all" function
                               (:typemodifiers ("inline")
                                :type "void")
                                (reparse-symbol namespacesubparts) [779 833])
                            ("disable_all" function
                               (:typemodifiers ("inline")
                                :type "void")
                                (reparse-symbol namespacesubparts) [893 946])
                            ("enableIRQ" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("IRQn" variable (:type ("IRQn_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1139 1151]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [1124 1152])
                            ("disableIRQ" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("IRQn" variable (:type ("IRQn_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1346 1358]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [1330 1359]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [576 1363]))                  
                :type "namespace")
                nil [557 1365]))          
      :file "mcal_irq.h"
      :pointmax 1407
      :fsize 1406
      :lastmodtime '(23478 24324 196937 901000)
      :unmatched-syntax nil
      :lexical-table 
        '(("_MCAL_IRQ_SAM4S_EMBEDDED_2018_")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("mcal_irq.h" include (:system-flag t) nil [165 186])
            ("init" function
               (:parent "mcal::irq"
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("config_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [209 228]))                  
                :type "void")
                nil [188 305])
            ("enableIRQ" function
               (:parent "mcal::irq"
                :arguments 
                  ( ("IRQn" variable (:type ("mcal::irq::IRQn_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [334 357]))                  
                :type "void")
                nil [308 735])
            ("disableIRQ" function
               (:parent "mcal::irq"
                :arguments 
                  ( ("IRQn" variable (:type ("mcal::irq::IRQn_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [764 788]))                  
                :type "void")
                nil [737 1190]))          
      :file "mcal_irq.cpp"
      :pointmax 1191
      :fsize 1190
      :lastmodtime '(23493 56271 482152 422000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("mcal_cpu.h" include (:system-flag t) nil [124 145])
            ("mcal_reg_access.h" include (:system-flag t) nil [146 174])
            ("init" function
               (:parent "mcal::cpu"
                :type "void")
                nil [250 875]))          
      :file "mcal_cpu.cpp"
      :pointmax 876
      :fsize 2173
      :lastmodtime '(23478 24327 690252 310000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("MCAL_PORT_2018_01_10_H_" variable (:constant-flag t) nil [161 184])
            ("mcal_reg_access.h" include (:system-flag t) nil [186 216])
            ("__vector_pio_a_handler" function
               (:prototype-flag t
                :type "void")
                nil [231 293])
            ("mcal" type
               (:members 
                  ( ("port" type
                       (:members 
                          ( ("config_type" type
                               (:typedef ("void")
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [345 370])
                            ("init" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("config_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [387 406]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [377 407])
                            ("port_pin" type
                               (:template 
                                  ( ("addr_type" type (:type "class") nil nil)
                                    ("reg_type" type (:type "class") nil nil)
                                    ("addr_type" type
                                       (:typevar "port"
                                        :constant-flag t)
                                        nil nil)
                                    ("reg_type" type
                                       (:typevar "bpos"
                                        :constant-flag t)
                                        nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [586 593])
                                    ("periphA_manage_pin" function
                                       (:typemodifiers ("static")
                                        :type "void")
                                        (reparse-symbol classsubparts) [603 1501])
                                    ("set_direction_output" function
                                       (:typemodifiers ("static")
                                        :type "void")
                                        (reparse-symbol classsubparts) [1511 2285])
                                    ("set_direction_input" function
                                       (:typemodifiers ("static")
                                        :type "void")
                                        (reparse-symbol classsubparts) [2295 3577])
                                    ("enable_pull_down" function
                                       (:typemodifiers ("static")
                                        :type "void")
                                        (reparse-symbol classsubparts) [3587 3862])
                                    ("disable_pull_down" function
                                       (:typemodifiers ("static")
                                        :type "void")
                                        (reparse-symbol classsubparts) [3872 4149])
                                    ("enable_pull_up" function
                                       (:typemodifiers ("static")
                                        :type "void")
                                        (reparse-symbol classsubparts) [4160 4431])
                                    ("disable_pull_up" function
                                       (:typemodifiers ("static")
                                        :type "void")
                                        (reparse-symbol classsubparts) [4441 4714])
                                    ("enable_interrupt_edge" function
                                       (:typemodifiers ("static")
                                        :type "void")
                                        (reparse-symbol classsubparts) [4724 5271])
                                    ("set_pin_high" function
                                       (:typemodifiers ("static")
                                        :type "void")
                                        (reparse-symbol classsubparts) [5282 5544])
                                    ("set_pin_low" function
                                       (:typemodifiers ("static")
                                        :type "void")
                                        (reparse-symbol classsubparts) [5554 5816])
                                    ("read_input_value" function
                                       (:typemodifiers ("static")
                                        :type "bool")
                                        (reparse-symbol classsubparts) [5826 6296])
                                    ("toggle_pin" function
                                       (:typemodifiers ("static")
                                        :type "void")
                                        (reparse-symbol classsubparts) [6306 6563])
                                    ("private" label nil (reparse-symbol classsubparts) [6571 6579])
                                    ("port_enable_register" variable
                                       (:default-value "addr_type(port + 0x00UL)"
                                        :type ("addr_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [6605 6671])
                                    ("port_disable_register" variable
                                       (:default-value "addr_type(port + 0x04UL)"
                                        :type ("addr_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [6697 6763])
                                    ("port_status_register" variable
                                       (:default-value "addr_type(port + 0x08UL)"
                                        :type ("addr_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [6789 6855])
                                    ("output_enable_register" variable
                                       (:default-value "addr_type(port + 0x10UL)"
                                        :type ("addr_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [6881 6947])
                                    ("output_disable_register" variable
                                       (:default-value "addr_type(port + 0x14UL)"
                                        :type ("addr_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [6973 7039])
                                    ("glicth_filter_disable" variable
                                       (:default-value "addr_type(port + 0x24UL)"
                                        :type ("addr_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7065 7131])
                                    ("set_output_data" variable
                                       (:default-value "addr_type(port + 0x30UL)"
                                        :type ("addr_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7157 7223])
                                    ("clear_output_data" variable
                                       (:default-value "addr_type(port + 0x34UL)"
                                        :type ("addr_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7249 7315])
                                    ("input_data_register" variable
                                       (:default-value "addr_type(port + 0x3CUL)"
                                        :type ("addr_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7341 7407])
                                    ("interrupt_enable_register" variable
                                       (:default-value "addr_type(port + 0x40UL)"
                                        :type ("addr_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7433 7499])
                                    ("interrupt_disable_register" variable
                                       (:default-value "addr_type(port + 0x44UL)"
                                        :type ("addr_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7525 7591])
                                    ("pull_up_disable_register" variable
                                       (:default-value "addr_type(port + 0x60UL)"
                                        :type ("addr_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7617 7683])
                                    ("pull_up_enable_register" variable
                                       (:default-value "addr_type(port + 0x64UL)"
                                        :type ("addr_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7709 7775])
                                    ("pull_down_enable_register" variable
                                       (:default-value "addr_type(port + 0x90UL)"
                                        :type ("addr_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7801 7867])
                                    ("pull_down_disable_register" variable
                                       (:default-value "addr_type(port + 0x94UL)"
                                        :type ("addr_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7893 7959])
                                    ("peripheral_select_register" variable
                                       (:default-value "addr_type(port + 0x70UL)"
                                        :type ("addr_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7985 8051])
                                    ("output_write_disable" variable
                                       (:default-value "addr_type(port + 0xA4UL)"
                                        :type ("addr_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [8077 8143]))                                  )
                                (reparse-symbol namespacesubparts) [415 8153])
                            ("led1_pin" variable (:type "int") (reparse-symbol namespacesubparts) [9464 9473])
                            ("led2_pin" variable (:type "int") (reparse-symbol namespacesubparts) [9684 9693])
                            ("sw3_button_pin" variable (:type "int") (reparse-symbol namespacesubparts) [9865 9880])
                            ("sw2_button_pin" variable (:type "int") (reparse-symbol namespacesubparts) [10052 10067])
                            ("addr0_pin" variable (:type "int") (reparse-symbol namespacesubparts) [10159 10169])
                            ("addr1_pin" variable (:type "int") (reparse-symbol namespacesubparts) [10260 10270])
                            ("addr2_pin" variable (:type "int") (reparse-symbol namespacesubparts) [10361 10371])
                            ("addr3_pin" variable (:type "int") (reparse-symbol namespacesubparts) [10462 10472])
                            ("addr4_pin" variable (:type "int") (reparse-symbol namespacesubparts) [10563 10573])
                            ("addr5_pin" variable (:type "int") (reparse-symbol namespacesubparts) [10664 10674])
                            ("addr6_pin" variable (:type "int") (reparse-symbol namespacesubparts) [10765 10775])
                            ("addr7_pin" variable (:type "int") (reparse-symbol namespacesubparts) [10866 10876])
                            ("counter" variable
                               (:typemodifiers ("extern")
                                :type ("std::uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [10884 10913]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [318 10919]))                  
                :type "namespace")
                nil [295 10923]))          
      :file "mcal_port.h"
      :pointmax 10959
      :fsize 11234
      :lastmodtime '(23493 56271 482152 422000)
      :unmatched-syntax '((punctuation 10863 . 10864) (semantic-list 10858 . 10862) (symbol 10850 . 10858) (number 10859 . 10861) (punctuation 10848 . 10849) (symbol 10839 . 10848) (punctuation 10838 . 10839) (punctuation 10837 . 10838) (symbol 10834 . 10837) (punctuation 10833 . 10834) (punctuation 10832 . 10833) (symbol 10828 . 10832) (punctuation 10826 . 10827) (symbol 10818 . 10826) (punctuation 10817 . 10818) (punctuation 10816 . 10817) (symbol 10813 . 10816) (punctuation 10811 . 10812) (symbol 10803 . 10811) (punctuation 10802 . 10803) (punctuation 10801 . 10802) (symbol 10798 . 10801) (punctuation 10797 . 10798) (symbol 10789 . 10797) (EXTERN 10782 . 10788) (punctuation 10762 . 10763) (semantic-list 10757 . 10761) (symbol 10749 . 10757) (number 10758 . 10760) (punctuation 10747 . 10748) (symbol 10738 . 10747) (punctuation 10737 . 10738) (punctuation 10736 . 10737) (symbol 10733 . 10736) (punctuation 10732 . 10733) (punctuation 10731 . 10732) (symbol 10727 . 10731) (punctuation 10725 . 10726) (symbol 10717 . 10725) (punctuation 10716 . 10717) (punctuation 10715 . 10716) (symbol 10712 . 10715) (punctuation 10710 . 10711) (symbol 10702 . 10710) (punctuation 10701 . 10702) (punctuation 10700 . 10701) (symbol 10697 . 10700) (punctuation 10696 . 10697) (symbol 10688 . 10696) (EXTERN 10681 . 10687) (punctuation 10661 . 10662) (semantic-list 10656 . 10660) (symbol 10648 . 10656) (number 10657 . 10659) (punctuation 10646 . 10647) (symbol 10637 . 10646) (punctuation 10636 . 10637) (punctuation 10635 . 10636) (symbol 10632 . 10635) (punctuation 10631 . 10632) (punctuation 10630 . 10631) (symbol 10626 . 10630) (punctuation 10624 . 10625) (symbol 10616 . 10624) (punctuation 10615 . 10616) (punctuation 10614 . 10615) (symbol 10611 . 10614) (punctuation 10609 . 10610) (symbol 10601 . 10609) (punctuation 10600 . 10601) (punctuation 10599 . 10600) (symbol 10596 . 10599) (punctuation 10595 . 10596) (symbol 10587 . 10595) (EXTERN 10580 . 10586) (punctuation 10560 . 10561) (semantic-list 10555 . 10559) (symbol 10547 . 10555) (number 10556 . 10558) (punctuation 10545 . 10546) (symbol 10536 . 10545) (punctuation 10535 . 10536) (punctuation 10534 . 10535) (symbol 10531 . 10534) (punctuation 10530 . 10531) (punctuation 10529 . 10530) (symbol 10525 . 10529) (punctuation 10523 . 10524) (symbol 10515 . 10523) (punctuation 10514 . 10515) (punctuation 10513 . 10514) (symbol 10510 . 10513) (punctuation 10508 . 10509) (symbol 10500 . 10508) (punctuation 10499 . 10500) (punctuation 10498 . 10499) (symbol 10495 . 10498) (punctuation 10494 . 10495) (symbol 10486 . 10494) (EXTERN 10479 . 10485) (punctuation 10459 . 10460) (semantic-list 10454 . 10458) (symbol 10446 . 10454) (number 10455 . 10457) (punctuation 10444 . 10445) (symbol 10435 . 10444) (punctuation 10434 . 10435) (punctuation 10433 . 10434) (symbol 10430 . 10433) (punctuation 10429 . 10430) (punctuation 10428 . 10429) (symbol 10424 . 10428) (punctuation 10422 . 10423) (symbol 10414 . 10422) (punctuation 10413 . 10414) (punctuation 10412 . 10413) (symbol 10409 . 10412) (punctuation 10407 . 10408) (symbol 10399 . 10407) (punctuation 10398 . 10399) (punctuation 10397 . 10398) (symbol 10394 . 10397) (punctuation 10393 . 10394) (symbol 10385 . 10393) (EXTERN 10378 . 10384) (punctuation 10358 . 10359) (semantic-list 10353 . 10356) (symbol 10345 . 10353) (number 10354 . 10355) (punctuation 10343 . 10344) (symbol 10334 . 10343) (punctuation 10333 . 10334) (punctuation 10332 . 10333) (symbol 10329 . 10332) (punctuation 10328 . 10329) (punctuation 10327 . 10328) (symbol 10323 . 10327) (punctuation 10321 . 10322) (symbol 10313 . 10321) (punctuation 10312 . 10313) (punctuation 10311 . 10312) (symbol 10308 . 10311) (punctuation 10306 . 10307) (symbol 10298 . 10306) (punctuation 10297 . 10298) (punctuation 10296 . 10297) (symbol 10293 . 10296) (punctuation 10292 . 10293) (symbol 10284 . 10292) (EXTERN 10277 . 10283) (punctuation 10257 . 10258) (semantic-list 10252 . 10255) (symbol 10244 . 10252) (number 10253 . 10254) (punctuation 10242 . 10243) (symbol 10233 . 10242) (punctuation 10232 . 10233) (punctuation 10231 . 10232) (symbol 10228 . 10231) (punctuation 10227 . 10228) (punctuation 10226 . 10227) (symbol 10222 . 10226) (punctuation 10220 . 10221) (symbol 10212 . 10220) (punctuation 10211 . 10212) (punctuation 10210 . 10211) (symbol 10207 . 10210) (punctuation 10205 . 10206) (symbol 10197 . 10205) (punctuation 10196 . 10197) (punctuation 10195 . 10196) (symbol 10192 . 10195) (punctuation 10191 . 10192) (symbol 10183 . 10191) (EXTERN 10176 . 10182) (punctuation 10156 . 10157) (semantic-list 10151 . 10154) (symbol 10143 . 10151) (number 10152 . 10153) (punctuation 10141 . 10142) (symbol 10132 . 10141) (punctuation 10131 . 10132) (punctuation 10130 . 10131) (symbol 10127 . 10130) (punctuation 10126 . 10127) (punctuation 10125 . 10126) (symbol 10121 . 10125) (punctuation 10119 . 10120) (symbol 10111 . 10119) (punctuation 10110 . 10111) (punctuation 10109 . 10110) (symbol 10106 . 10109) (punctuation 10104 . 10105) (symbol 10096 . 10104) (punctuation 10095 . 10096) (punctuation 10094 . 10095) (symbol 10091 . 10094) (punctuation 10090 . 10091) (symbol 10082 . 10090) (EXTERN 10075 . 10081) (punctuation 10050 . 10051) (semantic-list 10045 . 10049) (symbol 10037 . 10045) (number 10046 . 10048) (punctuation 10008 . 10009) (symbol 9999 . 10008) (punctuation 9998 . 9999) (punctuation 9997 . 9998) (symbol 9994 . 9997) (punctuation 9993 . 9994) (punctuation 9992 . 9993) (symbol 9988 . 9992) (punctuation 9959 . 9960) (symbol 9951 . 9959) (punctuation 9950 . 9951) (punctuation 9949 . 9950) (symbol 9946 . 9949) (punctuation 9917 . 9918) (symbol 9909 . 9917) (punctuation 9908 . 9909) (punctuation 9907 . 9908) (symbol 9904 . 9907) (punctuation 9903 . 9904) (symbol 9895 . 9903) (EXTERN 9888 . 9894) (punctuation 9863 . 9864) (semantic-list 9858 . 9862) (symbol 9850 . 9858) (number 9859 . 9861) (punctuation 9821 . 9822) (symbol 9812 . 9821) (punctuation 9811 . 9812) (punctuation 9810 . 9811) (symbol 9807 . 9810) (punctuation 9806 . 9807) (punctuation 9805 . 9806) (symbol 9801 . 9805) (punctuation 9772 . 9773) (symbol 9764 . 9772) (punctuation 9763 . 9764) (punctuation 9762 . 9763) (symbol 9759 . 9762) (punctuation 9730 . 9731) (symbol 9722 . 9730) (punctuation 9721 . 9722) (punctuation 9720 . 9721) (symbol 9717 . 9720) (punctuation 9716 . 9717) (symbol 9708 . 9716) (EXTERN 9701 . 9707) (punctuation 9682 . 9683) (semantic-list 9677 . 9681) (symbol 9669 . 9677) (number 9678 . 9680) (punctuation 9640 . 9641) (symbol 9631 . 9640) (punctuation 9630 . 9631) (punctuation 9629 . 9630) (symbol 9626 . 9629) (punctuation 9625 . 9626) (punctuation 9624 . 9625) (symbol 9620 . 9624) (punctuation 9591 . 9592) (symbol 9583 . 9591) (punctuation 9582 . 9583) (punctuation 9581 . 9582) (symbol 9578 . 9581) (punctuation 9549 . 9550) (symbol 9541 . 9549) (punctuation 9540 . 9541) (punctuation 9539 . 9540) (symbol 9536 . 9539) (punctuation 9535 . 9536) (symbol 9527 . 9535) (EXTERN 9520 . 9526) (punctuation 9462 . 9463) (semantic-list 9457 . 9461) (symbol 9449 . 9457) (number 9458 . 9460) (punctuation 9420 . 9421) (symbol 9411 . 9420) (punctuation 9410 . 9411) (punctuation 9409 . 9410) (symbol 9406 . 9409) (punctuation 9405 . 9406) (punctuation 9404 . 9405) (symbol 9400 . 9404) (punctuation 9371 . 9372) (symbol 9363 . 9371) (punctuation 9362 . 9363) (punctuation 9361 . 9362) (symbol 9358 . 9361) (punctuation 9329 . 9330) (symbol 9321 . 9329) (punctuation 9320 . 9321) (punctuation 9319 . 9320) (symbol 9316 . 9319) (punctuation 9315 . 9316) (symbol 9307 . 9315) (EXTERN 9300 . 9306) (symbol 8067 . 8076) (STATIC 8060 . 8066) (symbol 7975 . 7984) (STATIC 7968 . 7974) (symbol 7883 . 7892) (STATIC 7876 . 7882) (symbol 7791 . 7800) (STATIC 7784 . 7790) (symbol 7699 . 7708) (STATIC 7692 . 7698) (symbol 7607 . 7616) (STATIC 7600 . 7606) (symbol 7515 . 7524) (STATIC 7508 . 7514) (symbol 7423 . 7432) (STATIC 7416 . 7422) (symbol 7331 . 7340) (STATIC 7324 . 7330) (symbol 7239 . 7248) (STATIC 7232 . 7238) (symbol 7147 . 7156) (STATIC 7140 . 7146) (symbol 7055 . 7064) (STATIC 7048 . 7054) (symbol 6963 . 6972) (STATIC 6956 . 6962) (symbol 6871 . 6880) (STATIC 6864 . 6870) (symbol 6779 . 6788) (STATIC 6772 . 6778) (symbol 6687 . 6696) (STATIC 6680 . 6686) (symbol 6595 . 6604) (STATIC 6588 . 6594))
      :lexical-table 
        '(("MCAL_PORT_2018_01_10_H_")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("mcal_port.h" include (:system-flag t) nil [286 308])
            ("mcal_reg_access.h" include (:system-flag t) nil [309 337])
            ("mcal::port::led1_pin" variable (:type "int") nil [529 550])
            ("mcal::port::led2_pin" variable (:type "int") nil [737 758])
            ("mcal::port::sw3_button_pin" variable (:type "int") nil [975 1002])
            ("mcal::port::sw2_button_pin" variable (:type "int") nil [1198 1225])
            ("mcal::port::addr0_pin" variable (:type "int") nil [1332 1354])
            ("mcal::port::addr1_pin" variable (:type "int") nil [1444 1466])
            ("mcal::port::addr2_pin" variable (:type "int") nil [1556 1578])
            ("mcal::port::addr3_pin" variable (:type "int") nil [1668 1690])
            ("mcal::port::addr4_pin" variable (:type "int") nil [1780 1802])
            ("mcal::port::addr5_pin" variable (:type "int") nil [1892 1914])
            ("mcal::port::addr6_pin" variable (:type "int") nil [2004 2026])
            ("mcal::port::addr7_pin" variable (:type "int") nil [2116 2138])
            ("init" function
               (:parent "mcal::port"
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("config_type" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3508 3527]))                  
                :type "void")
                nil [3486 5449])
            ("mcal::port::counter" variable (:type ("std::uint32_t" type (:type "class") nil nil)) nil [5451 5485])
            ("__vector_pio_a_handler" function
               (:prototype-flag t
                :type "void")
                nil [5551 5613])
            ("__vector_pio_a_handler" function (:type "void") nil [5614 6102]))          
      :file "mcal_port.cpp"
      :pointmax 6103
      :fsize 6265
      :lastmodtime '(23493 56271 482152 422000)
      :unmatched-syntax '((punctuation 2113 . 2114) (semantic-list 2108 . 2112) (symbol 2100 . 2108) (number 2109 . 2111) (punctuation 2098 . 2099) (symbol 2089 . 2098) (punctuation 2088 . 2089) (punctuation 2087 . 2088) (symbol 2084 . 2087) (punctuation 2083 . 2084) (punctuation 2082 . 2083) (symbol 2078 . 2082) (punctuation 2076 . 2077) (symbol 2068 . 2076) (punctuation 2067 . 2068) (punctuation 2066 . 2067) (symbol 2063 . 2066) (punctuation 2061 . 2062) (symbol 2053 . 2061) (punctuation 2052 . 2053) (punctuation 2051 . 2052) (symbol 2048 . 2051) (punctuation 2047 . 2048) (symbol 2039 . 2047) (punctuation 2038 . 2039) (punctuation 2037 . 2038) (symbol 2033 . 2037) (punctuation 2032 . 2033) (punctuation 2031 . 2032) (symbol 2027 . 2031) (punctuation 2001 . 2002) (semantic-list 1996 . 2000) (symbol 1988 . 1996) (number 1997 . 1999) (punctuation 1986 . 1987) (symbol 1977 . 1986) (punctuation 1976 . 1977) (punctuation 1975 . 1976) (symbol 1972 . 1975) (punctuation 1971 . 1972) (punctuation 1970 . 1971) (symbol 1966 . 1970) (punctuation 1964 . 1965) (symbol 1956 . 1964) (punctuation 1955 . 1956) (punctuation 1954 . 1955) (symbol 1951 . 1954) (punctuation 1949 . 1950) (symbol 1941 . 1949) (punctuation 1940 . 1941) (punctuation 1939 . 1940) (symbol 1936 . 1939) (punctuation 1935 . 1936) (symbol 1927 . 1935) (punctuation 1926 . 1927) (punctuation 1925 . 1926) (symbol 1921 . 1925) (punctuation 1920 . 1921) (punctuation 1919 . 1920) (symbol 1915 . 1919) (punctuation 1889 . 1890) (semantic-list 1884 . 1888) (symbol 1876 . 1884) (number 1885 . 1887) (punctuation 1874 . 1875) (symbol 1865 . 1874) (punctuation 1864 . 1865) (punctuation 1863 . 1864) (symbol 1860 . 1863) (punctuation 1859 . 1860) (punctuation 1858 . 1859) (symbol 1854 . 1858) (punctuation 1852 . 1853) (symbol 1844 . 1852) (punctuation 1843 . 1844) (punctuation 1842 . 1843) (symbol 1839 . 1842) (punctuation 1837 . 1838) (symbol 1829 . 1837) (punctuation 1828 . 1829) (punctuation 1827 . 1828) (symbol 1824 . 1827) (punctuation 1823 . 1824) (symbol 1815 . 1823) (punctuation 1814 . 1815) (punctuation 1813 . 1814) (symbol 1809 . 1813) (punctuation 1808 . 1809) (punctuation 1807 . 1808) (symbol 1803 . 1807) (punctuation 1777 . 1778) (semantic-list 1772 . 1776) (symbol 1764 . 1772) (number 1773 . 1775) (punctuation 1762 . 1763) (symbol 1753 . 1762) (punctuation 1752 . 1753) (punctuation 1751 . 1752) (symbol 1748 . 1751) (punctuation 1747 . 1748) (punctuation 1746 . 1747) (symbol 1742 . 1746) (punctuation 1740 . 1741) (symbol 1732 . 1740) (punctuation 1731 . 1732) (punctuation 1730 . 1731) (symbol 1727 . 1730) (punctuation 1725 . 1726) (symbol 1717 . 1725) (punctuation 1716 . 1717) (punctuation 1715 . 1716) (symbol 1712 . 1715) (punctuation 1711 . 1712) (symbol 1703 . 1711) (punctuation 1702 . 1703) (punctuation 1701 . 1702) (symbol 1697 . 1701) (punctuation 1696 . 1697) (punctuation 1695 . 1696) (symbol 1691 . 1695) (punctuation 1665 . 1666) (semantic-list 1660 . 1664) (symbol 1652 . 1660) (number 1661 . 1663) (punctuation 1650 . 1651) (symbol 1641 . 1650) (punctuation 1640 . 1641) (punctuation 1639 . 1640) (symbol 1636 . 1639) (punctuation 1635 . 1636) (punctuation 1634 . 1635) (symbol 1630 . 1634) (punctuation 1628 . 1629) (symbol 1620 . 1628) (punctuation 1619 . 1620) (punctuation 1618 . 1619) (symbol 1615 . 1618) (punctuation 1613 . 1614) (symbol 1605 . 1613) (punctuation 1604 . 1605) (punctuation 1603 . 1604) (symbol 1600 . 1603) (punctuation 1599 . 1600) (symbol 1591 . 1599) (punctuation 1590 . 1591) (punctuation 1589 . 1590) (symbol 1585 . 1589) (punctuation 1584 . 1585) (punctuation 1583 . 1584) (symbol 1579 . 1583) (punctuation 1553 . 1554) (semantic-list 1548 . 1551) (symbol 1540 . 1548) (number 1549 . 1550) (punctuation 1538 . 1539) (symbol 1529 . 1538) (punctuation 1528 . 1529) (punctuation 1527 . 1528) (symbol 1524 . 1527) (punctuation 1523 . 1524) (punctuation 1522 . 1523) (symbol 1518 . 1522) (punctuation 1516 . 1517) (symbol 1508 . 1516) (punctuation 1507 . 1508) (punctuation 1506 . 1507) (symbol 1503 . 1506) (punctuation 1501 . 1502) (symbol 1493 . 1501) (punctuation 1492 . 1493) (punctuation 1491 . 1492) (symbol 1488 . 1491) (punctuation 1487 . 1488) (symbol 1479 . 1487) (punctuation 1478 . 1479) (punctuation 1477 . 1478) (symbol 1473 . 1477) (punctuation 1472 . 1473) (punctuation 1471 . 1472) (symbol 1467 . 1471) (punctuation 1441 . 1442) (semantic-list 1436 . 1439) (symbol 1428 . 1436) (number 1437 . 1438) (punctuation 1426 . 1427) (symbol 1417 . 1426) (punctuation 1416 . 1417) (punctuation 1415 . 1416) (symbol 1412 . 1415) (punctuation 1411 . 1412) (punctuation 1410 . 1411) (symbol 1406 . 1410) (punctuation 1404 . 1405) (symbol 1396 . 1404) (punctuation 1395 . 1396) (punctuation 1394 . 1395) (symbol 1391 . 1394) (punctuation 1389 . 1390) (symbol 1381 . 1389) (punctuation 1380 . 1381) (punctuation 1379 . 1380) (symbol 1376 . 1379) (punctuation 1375 . 1376) (symbol 1367 . 1375) (punctuation 1366 . 1367) (punctuation 1365 . 1366) (symbol 1361 . 1365) (punctuation 1360 . 1361) (punctuation 1359 . 1360) (symbol 1355 . 1359) (punctuation 1329 . 1330) (semantic-list 1324 . 1327) (symbol 1316 . 1324) (number 1325 . 1326) (punctuation 1314 . 1315) (symbol 1305 . 1314) (punctuation 1304 . 1305) (punctuation 1303 . 1304) (symbol 1300 . 1303) (punctuation 1299 . 1300) (punctuation 1298 . 1299) (symbol 1294 . 1298) (punctuation 1292 . 1293) (symbol 1284 . 1292) (punctuation 1283 . 1284) (punctuation 1282 . 1283) (symbol 1279 . 1282) (punctuation 1277 . 1278) (symbol 1269 . 1277) (punctuation 1268 . 1269) (punctuation 1267 . 1268) (symbol 1264 . 1267) (punctuation 1263 . 1264) (symbol 1255 . 1263) (punctuation 1254 . 1255) (punctuation 1253 . 1254) (symbol 1249 . 1253) (punctuation 1248 . 1249) (punctuation 1247 . 1248) (symbol 1243 . 1247) (punctuation 1195 . 1196) (semantic-list 1190 . 1194) (symbol 1182 . 1190) (number 1191 . 1193) (punctuation 1159 . 1160) (symbol 1150 . 1159) (punctuation 1149 . 1150) (punctuation 1148 . 1149) (symbol 1145 . 1148) (punctuation 1144 . 1145) (punctuation 1143 . 1144) (symbol 1139 . 1143) (punctuation 1116 . 1117) (symbol 1108 . 1116) (punctuation 1107 . 1108) (punctuation 1106 . 1107) (symbol 1103 . 1106) (punctuation 1080 . 1081) (symbol 1072 . 1080) (punctuation 1071 . 1072) (punctuation 1070 . 1071) (symbol 1067 . 1070) (punctuation 1066 . 1067) (symbol 1058 . 1066) (punctuation 1057 . 1058) (punctuation 1056 . 1057) (symbol 1052 . 1056) (punctuation 1051 . 1052) (punctuation 1050 . 1051) (symbol 1046 . 1050) (punctuation 973 . 974) (semantic-list 968 . 972) (symbol 960 . 968) (number 969 . 971) (punctuation 937 . 938) (symbol 928 . 937) (punctuation 927 . 928) (punctuation 926 . 927) (symbol 923 . 926) (punctuation 922 . 923) (punctuation 921 . 922) (symbol 917 . 921) (punctuation 894 . 895) (symbol 886 . 894) (punctuation 885 . 886) (punctuation 884 . 885) (symbol 881 . 884) (punctuation 858 . 859) (symbol 850 . 858) (punctuation 849 . 850) (punctuation 848 . 849) (symbol 845 . 848) (punctuation 844 . 845) (symbol 836 . 844) (punctuation 835 . 836) (punctuation 834 . 835) (symbol 830 . 834) (punctuation 829 . 830) (punctuation 828 . 829) (symbol 824 . 828) (punctuation 735 . 736) (semantic-list 730 . 734) (symbol 722 . 730) (number 731 . 733) (punctuation 699 . 700) (symbol 690 . 699) (punctuation 689 . 690) (punctuation 688 . 689) (symbol 685 . 688) (punctuation 684 . 685) (punctuation 683 . 684) (symbol 679 . 683) (punctuation 656 . 657) (symbol 648 . 656) (punctuation 647 . 648) (punctuation 646 . 647) (symbol 643 . 646) (punctuation 620 . 621) (symbol 612 . 620) (punctuation 611 . 612) (punctuation 610 . 611) (symbol 607 . 610) (punctuation 606 . 607) (symbol 598 . 606) (punctuation 597 . 598) (punctuation 596 . 597) (symbol 592 . 596) (punctuation 591 . 592) (punctuation 590 . 591) (symbol 586 . 590) (punctuation 527 . 528) (semantic-list 522 . 526) (symbol 514 . 522) (number 523 . 525) (punctuation 491 . 492) (symbol 482 . 491) (punctuation 481 . 482) (punctuation 480 . 481) (symbol 477 . 480) (punctuation 476 . 477) (punctuation 475 . 476) (symbol 471 . 475) (punctuation 448 . 449) (symbol 440 . 448) (punctuation 439 . 440) (punctuation 438 . 439) (symbol 435 . 438) (punctuation 412 . 413) (symbol 404 . 412) (punctuation 403 . 404) (punctuation 402 . 403) (symbol 399 . 402) (punctuation 398 . 399) (symbol 390 . 398) (punctuation 389 . 390) (punctuation 388 . 389) (symbol 384 . 388) (punctuation 383 . 384) (punctuation 382 . 383) (symbol 378 . 382) (punctuation 1650 . 1651) (symbol 1641 . 1650) (punctuation 1640 . 1641) (punctuation 1639 . 1640) (symbol 1636 . 1639) (punctuation 1635 . 1636) (punctuation 1634 . 1635) (symbol 1630 . 1634) (punctuation 1628 . 1629) (symbol 1620 . 1628) (punctuation 1619 . 1620) (punctuation 1618 . 1619) (symbol 1615 . 1618) (punctuation 1613 . 1614) (symbol 1605 . 1613) (punctuation 1604 . 1605) (punctuation 1603 . 1604) (symbol 1600 . 1603) (punctuation 1599 . 1600) (symbol 1591 . 1599) (punctuation 1590 . 1591) (punctuation 1589 . 1590) (symbol 1585 . 1589) (punctuation 1584 . 1585) (punctuation 1583 . 1584) (symbol 1579 . 1583) (punctuation 1553 . 1554) (semantic-list 1548 . 1551) (symbol 1540 . 1548) (number 1549 . 1550) (punctuation 1538 . 1539) (symbol 1529 . 1538) (punctuation 1528 . 1529) (punctuation 1527 . 1528) (symbol 1524 . 1527) (punctuation 1523 . 1524) (punctuation 1522 . 1523) (symbol 1518 . 1522) (punctuation 1516 . 1517) (symbol 1508 . 1516) (punctuation 1507 . 1508) (punctuation 1506 . 1507) (symbol 1503 . 1506) (punctuation 1501 . 1502) (symbol 1493 . 1501) (punctuation 1492 . 1493) (punctuation 1491 . 1492) (symbol 1488 . 1491) (punctuation 1487 . 1488) (symbol 1479 . 1487) (punctuation 1478 . 1479) (punctuation 1477 . 1478) (symbol 1473 . 1477) (punctuation 1472 . 1473) (punctuation 1471 . 1472) (symbol 1467 . 1471) (punctuation 1441 . 1442) (semantic-list 1436 . 1439) (symbol 1428 . 1436) (number 1437 . 1438) (punctuation 1426 . 1427) (symbol 1417 . 1426) (punctuation 1416 . 1417) (punctuation 1415 . 1416) (symbol 1412 . 1415) (punctuation 1411 . 1412) (punctuation 1410 . 1411) (symbol 1406 . 1410) (punctuation 1404 . 1405) (symbol 1396 . 1404) (punctuation 1395 . 1396) (punctuation 1394 . 1395) (symbol 1391 . 1394) (punctuation 1389 . 1390) (symbol 1381 . 1389) (punctuation 1380 . 1381) (punctuation 1379 . 1380) (symbol 1376 . 1379) (punctuation 1375 . 1376) (symbol 1367 . 1375) (punctuation 1366 . 1367) (punctuation 1365 . 1366) (symbol 1361 . 1365) (punctuation 1360 . 1361) (punctuation 1359 . 1360) (symbol 1355 . 1359) (punctuation 1329 . 1330) (semantic-list 1324 . 1327) (symbol 1316 . 1324) (number 1325 . 1326) (punctuation 1314 . 1315) (symbol 1305 . 1314) (punctuation 1304 . 1305) (punctuation 1303 . 1304) (symbol 1300 . 1303) (punctuation 1299 . 1300) (punctuation 1298 . 1299) (symbol 1294 . 1298) (punctuation 1292 . 1293) (symbol 1284 . 1292) (punctuation 1283 . 1284) (punctuation 1282 . 1283) (symbol 1279 . 1282) (punctuation 1277 . 1278) (symbol 1269 . 1277) (punctuation 1268 . 1269) (punctuation 1267 . 1268) (symbol 1264 . 1267) (punctuation 1263 . 1264) (symbol 1255 . 1263) (punctuation 1254 . 1255) (punctuation 1253 . 1254) (symbol 1249 . 1253) (punctuation 1248 . 1249) (punctuation 1247 . 1248) (symbol 1243 . 1247) (punctuation 1195 . 1196) (semantic-list 1190 . 1194) (symbol 1182 . 1190) (number 1191 . 1193) (punctuation 1159 . 1160) (symbol 1150 . 1159) (punctuation 1149 . 1150) (punctuation 1148 . 1149) (symbol 1145 . 1148) (punctuation 1144 . 1145) (punctuation 1143 . 1144) (symbol 1139 . 1143) (punctuation 1116 . 1117) (symbol 1108 . 1116) (punctuation 1107 . 1108) (punctuation 1106 . 1107) (symbol 1103 . 1106) (punctuation 1080 . 1081) (symbol 1072 . 1080) (punctuation 1071 . 1072) (punctuation 1070 . 1071) (symbol 1067 . 1070) (punctuation 1066 . 1067) (symbol 1058 . 1066) (punctuation 1057 . 1058) (punctuation 1056 . 1057) (symbol 1052 . 1056) (punctuation 1051 . 1052) (punctuation 1050 . 1051) (symbol 1046 . 1050) (punctuation 973 . 974) (semantic-list 968 . 972) (symbol 960 . 968) (number 969 . 971) (punctuation 937 . 938) (symbol 928 . 937) (punctuation 927 . 928) (punctuation 926 . 927) (symbol 923 . 926) (punctuation 922 . 923) (punctuation 921 . 922) (symbol 917 . 921) (punctuation 894 . 895) (symbol 886 . 894) (punctuation 885 . 886) (punctuation 884 . 885) (symbol 881 . 884) (punctuation 858 . 859) (symbol 850 . 858) (punctuation 849 . 850) (punctuation 848 . 849) (symbol 845 . 848) (punctuation 844 . 845) (symbol 836 . 844) (punctuation 835 . 836) (punctuation 834 . 835) (symbol 830 . 834) (punctuation 829 . 830) (punctuation 828 . 829) (symbol 824 . 828) (punctuation 735 . 736) (semantic-list 730 . 734) (symbol 722 . 730) (number 731 . 733) (punctuation 699 . 700) (symbol 690 . 699) (punctuation 689 . 690) (punctuation 688 . 689) (symbol 685 . 688) (punctuation 684 . 685) (punctuation 683 . 684) (symbol 679 . 683) (punctuation 656 . 657) (symbol 648 . 656) (punctuation 647 . 648) (punctuation 646 . 647) (symbol 643 . 646) (punctuation 620 . 621) (symbol 612 . 620) (punctuation 611 . 612) (punctuation 610 . 611) (symbol 607 . 610) (punctuation 606 . 607) (symbol 598 . 606) (punctuation 597 . 598) (punctuation 596 . 597) (symbol 592 . 596) (punctuation 591 . 592) (punctuation 590 . 591) (symbol 586 . 590) (punctuation 527 . 528) (semantic-list 522 . 526) (symbol 514 . 522) (number 523 . 525) (punctuation 491 . 492) (symbol 482 . 491) (punctuation 481 . 482) (punctuation 480 . 481) (symbol 477 . 480) (punctuation 476 . 477) (punctuation 475 . 476) (symbol 471 . 475) (punctuation 448 . 449) (symbol 440 . 448) (punctuation 439 . 440) (punctuation 438 . 439) (symbol 435 . 438) (punctuation 412 . 413) (symbol 404 . 412) (punctuation 403 . 404) (punctuation 402 . 403) (symbol 399 . 402) (punctuation 398 . 399) (symbol 390 . 398) (punctuation 389 . 390) (punctuation 388 . 389) (symbol 384 . 388) (punctuation 383 . 384) (punctuation 382 . 383) (symbol 378 . 382) (punctuation 1314 . 1315) (symbol 1305 . 1314) (punctuation 1304 . 1305) (punctuation 1303 . 1304) (symbol 1300 . 1303) (punctuation 1299 . 1300) (punctuation 1298 . 1299) (symbol 1294 . 1298) (punctuation 1292 . 1293) (symbol 1284 . 1292) (punctuation 1283 . 1284) (punctuation 1282 . 1283) (symbol 1279 . 1282) (punctuation 1277 . 1278) (symbol 1269 . 1277) (punctuation 1268 . 1269) (punctuation 1267 . 1268) (symbol 1264 . 1267) (punctuation 1263 . 1264) (symbol 1255 . 1263) (punctuation 1254 . 1255) (punctuation 1253 . 1254) (symbol 1249 . 1253) (punctuation 1248 . 1249) (punctuation 1247 . 1248) (symbol 1243 . 1247) (punctuation 1195 . 1196) (semantic-list 1190 . 1194) (symbol 1182 . 1190) (number 1191 . 1193) (punctuation 1159 . 1160) (symbol 1150 . 1159) (punctuation 1149 . 1150) (punctuation 1148 . 1149) (symbol 1145 . 1148) (punctuation 1144 . 1145) (punctuation 1143 . 1144) (symbol 1139 . 1143) (punctuation 1116 . 1117) (symbol 1108 . 1116) (punctuation 1107 . 1108) (punctuation 1106 . 1107) (symbol 1103 . 1106) (punctuation 1080 . 1081) (symbol 1072 . 1080) (punctuation 1071 . 1072) (punctuation 1070 . 1071) (symbol 1067 . 1070) (punctuation 1066 . 1067) (symbol 1058 . 1066) (punctuation 1057 . 1058) (punctuation 1056 . 1057) (symbol 1052 . 1056) (punctuation 1051 . 1052) (punctuation 1050 . 1051) (symbol 1046 . 1050) (punctuation 973 . 974) (semantic-list 968 . 972) (symbol 960 . 968) (number 969 . 971) (punctuation 937 . 938) (symbol 928 . 937) (punctuation 927 . 928) (punctuation 926 . 927) (symbol 923 . 926) (punctuation 922 . 923) (punctuation 921 . 922) (symbol 917 . 921) (punctuation 894 . 895) (symbol 886 . 894) (punctuation 885 . 886) (punctuation 884 . 885) (symbol 881 . 884) (punctuation 858 . 859) (symbol 850 . 858) (punctuation 849 . 850) (punctuation 848 . 849) (symbol 845 . 848) (punctuation 844 . 845) (symbol 836 . 844) (punctuation 835 . 836) (punctuation 834 . 835) (symbol 830 . 834) (punctuation 829 . 830) (punctuation 828 . 829) (symbol 824 . 828) (punctuation 735 . 736) (semantic-list 730 . 734) (symbol 722 . 730) (number 731 . 733) (punctuation 699 . 700) (symbol 690 . 699) (punctuation 689 . 690) (punctuation 688 . 689) (symbol 685 . 688) (punctuation 684 . 685) (punctuation 683 . 684) (symbol 679 . 683) (punctuation 656 . 657) (symbol 648 . 656) (punctuation 647 . 648) (punctuation 646 . 647) (symbol 643 . 646) (punctuation 620 . 621) (symbol 612 . 620) (punctuation 611 . 612) (punctuation 610 . 611) (symbol 607 . 610) (punctuation 606 . 607) (symbol 598 . 606) (punctuation 597 . 598) (punctuation 596 . 597) (symbol 592 . 596) (punctuation 591 . 592) (punctuation 590 . 591) (symbol 586 . 590) (punctuation 527 . 528) (semantic-list 522 . 526) (symbol 514 . 522) (number 523 . 525) (punctuation 491 . 492) (symbol 482 . 491) (punctuation 481 . 482) (punctuation 480 . 481) (symbol 477 . 480) (punctuation 476 . 477) (punctuation 475 . 476) (symbol 471 . 475) (punctuation 448 . 449) (symbol 440 . 448) (punctuation 439 . 440) (punctuation 438 . 439) (symbol 435 . 438) (punctuation 412 . 413) (symbol 404 . 412) (punctuation 403 . 404) (punctuation 402 . 403) (symbol 399 . 402) (punctuation 398 . 399) (symbol 390 . 398) (punctuation 389 . 390) (punctuation 388 . 389) (symbol 384 . 388) (punctuation 383 . 384) (punctuation 382 . 383) (symbol 378 . 382)))
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("_MCAL_I2C_SAM4S_EMBEDDED_2018_" variable (:constant-flag t) nil [451 481])
            ("cstdint" include (:system-flag t) nil [484 502])
            ("mcal_cpu.h" include (:system-flag t) nil [503 524])
            ("mcal_reg_access.h" include (:system-flag t) nil [525 553])
            ("algorithm" include (:system-flag t) nil [554 574])
            ("mcal" type
               (:members 
                  ( ("i2c" type
                       (:members 
                          ( ("config_type" type
                               (:typedef ("void")
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [701 726])
                            ("init" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("config_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [742 761]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [732 762])
                            ("i2c_communication" type
                               (:template 
                                  ( ("port_type" type (:type "class") nil nil)
                                    ("bval_type" type (:type "class") nil nil)
                                    ("port_type" type (:typevar "port") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [1008 1015])
                                    ("addr_type" type
                                       (:typedef ("std::uint32_t" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [1022 1054])
                                    ("reg_type" type
                                       (:typedef ("std::uint32_t" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [1061 1092])
                                    ("i2c_communication" function
                                       (:constructor-flag t
                                        :type ("i2c_communication" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1100 2406])
                                    ("send_start_bit" function (:type "void") (reparse-symbol classsubparts) [2414 2680])
                                    ("send_stop_bit" function (:type "void") (reparse-symbol classsubparts) [2688 2952])
                                    ("send_read_cmd" function (:type "void") (reparse-symbol classsubparts) [2960 3242])
                                    ("send_write_cmd" function (:type "void") (reparse-symbol classsubparts) [3322 3605])
                                    ("send" function
                                       (:arguments 
                                          ( ("byte_to_send" variable
                                               (:constant-flag t
                                                :type ("bval_type" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3738 3767]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [3728 4164])
                                    ("send_n" function
                                       (:template 
                                          ( ("send_iterator_type" type (:type "class") nil nil))                                          
                                        :type "bool"
                                        :arguments 
                                          ( ("first" variable (:type ("send_iterator_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4228 4253])
                                            ("last" variable (:type ("send_iterator_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4272 4296]))                                          )
                                        (reparse-symbol classsubparts) [4172 5783])
                                    ("recv" function
                                       (:arguments 
                                          ( ("byte_to_recv" variable
                                               (:reference 1
                                                :type ("bval_type" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5801 5825]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [5791 6010])
                                    ("receive_ready" function (:type "bool") (reparse-symbol classsubparts) [6062 6326])
                                    ("private" label nil (reparse-symbol classsubparts) [6330 6338])
                                    ("slave_addr" variable
                                       (:default-value "0x80UL"
                                        :type ("std::uint8_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [6362 6395])
                                    ("send_is_active" variable
                                       (:typemodifiers ("volatile")
                                        :type "bool")
                                        (reparse-symbol classsubparts) [6403 6432])
                                    ("ctrl_register" variable
                                       (:default-value "addr_type(port + 0x00UL)"
                                        :type ("addr_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [6457 6523])
                                    ("master_mode_register" variable
                                       (:default-value "addr_type(port + 0x04UL)"
                                        :type ("addr_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [6547 6613])
                                    ("slave_mode_register" variable
                                       (:default-value "addr_type(port + 0x08UL)"
                                        :type ("addr_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [6637 6703])
                                    ("internal_addr_register" variable
                                       (:default-value "addr_type(port + 0x0CUL)"
                                        :type ("addr_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [6727 6793])
                                    ("clock_generator_register" variable
                                       (:default-value "addr_type(port + 0x10UL)"
                                        :type ("addr_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [6817 6883])
                                    ("status_register" variable
                                       (:default-value "addr_type(port + 0x20UL)"
                                        :type ("addr_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [6997 7063])
                                    ("interrupt_enable_register" variable
                                       (:default-value "addr_type(port + 0x24UL)"
                                        :type ("addr_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7088 7152])
                                    ("interrupt_disable_register" variable
                                       (:default-value "addr_type(port + 0x28UL)"
                                        :type ("addr_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7176 7240])
                                    ("interrupt_mask_register" variable
                                       (:default-value "addr_type(port + 0x2CUL)"
                                        :type ("addr_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7264 7328])
                                    ("input_data_register" variable
                                       (:default-value "addr_type(port + 0x30UL)"
                                        :type ("addr_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7353 7417])
                                    ("output_data_register" variable
                                       (:default-value "addr_type(port + 0x34UL)"
                                        :type ("addr_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7441 7505]))                                  )
                                (reparse-symbol namespacesubparts) [845 7658])
                            ("the_i2c_0" variable
                               (:typemodifiers ("extern")
                                :type ("i2c_communication" type
                                     (:template-specifier 
                                        ( ("std::uint32_t" type nil nil nil)
                                          ("std::uint8_t" type nil nil nil)
                                          ("mcal::reg::twi0_base" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol namespacesubparts) [7664 7808]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [679 7973]))                  
                :type "namespace")
                nil [660 7976]))          
      :file "mcal_i2c.h"
      :pointmax 8019
      :fsize 8019
      :lastmodtime '(23478 24324 196937 901000)
      :unmatched-syntax '((symbol 7431 . 7440) (STATIC 7424 . 7430) (symbol 7343 . 7352) (STATIC 7336 . 7342) (symbol 7254 . 7263) (STATIC 7247 . 7253) (symbol 7166 . 7175) (STATIC 7159 . 7165) (symbol 7078 . 7087) (STATIC 7071 . 7077) (symbol 6987 . 6996) (STATIC 6980 . 6986) (symbol 6807 . 6816) (STATIC 6800 . 6806) (symbol 6717 . 6726) (STATIC 6710 . 6716) (symbol 6627 . 6636) (STATIC 6620 . 6626) (symbol 6537 . 6546) (STATIC 6530 . 6536) (symbol 6447 . 6456) (STATIC 6440 . 6446) (symbol 6352 . 6361) (STATIC 6345 . 6351))
      :lexical-table 
        '(("_MCAL_I2C_SAM4S_EMBEDDED_2018_")
          )
))
  :file "!srv!share!Workspace!sensor-iot!src!mcal!sam4s!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
